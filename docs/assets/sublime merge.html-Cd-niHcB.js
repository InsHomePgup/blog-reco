import{_ as e,o as t,c as i,d as a}from"./app-ClyKmoKW.js";const s={},m=a('<p>最早的时候写前端使用的是sublime text。现在这家的另外一个产品，git gui ，sublime merge也是挺好用的，看了一下许可证要$99，还是白嫖吧哈哈哈。</p><h2 id="add-commit-push" tabindex="-1"><a class="header-anchor" href="#add-commit-push"><span>add commit push</span></a></h2><p>可以很方便的add 和commit,右上角push + pull <img src="https://raw.githubusercontent.com/InsHomePgup/blog-reco/main/imgs/sublime.png" alt=""></p><h2 id="branch-remote-tags" tabindex="-1"><a class="header-anchor" href="#branch-remote-tags"><span>branch remote tags</span></a></h2><p>直接查看分支，其他分支可以控制显示和隐藏。 还可以管理多远程仓库，直接右键管理tag</p><p><img src="https://raw.githubusercontent.com/InsHomePgup/blog-reco/main/imgs/branch.png" alt=""></p><h2 id="commit" tabindex="-1"><a class="header-anchor" href="#commit"><span>commit</span></a></h2><p>快速查看commit和每次的变动的文件等等 这里还能看到commit相关的tag，还能看到合并路径，不过我现在的操作太简单，就是一条直线所以也没有这些。</p><p><img src="https://raw.githubusercontent.com/InsHomePgup/blog-reco/main/imgs/Snipaste_2024-06-08_17-28-59.png" alt=""></p><h2 id="一个非常好用的功能-filehistory" tabindex="-1"><a class="header-anchor" href="#一个非常好用的功能-filehistory"><span>一个非常好用的功能 - FileHistory</span></a></h2><p>我在Mac端，快捷键 Command + P 打开控制台，输入File直接可以看到FileHistory的选项。</p><p><img src="https://raw.githubusercontent.com/InsHomePgup/blog-reco/main/imgs/FileHistoryCmd.png" alt=""></p><p>输入文件名以后就可以直接看到有关这个文件的所有Commit和改动了，这个真的是太香了，用来调试一些奇奇怪怪的bug的时候可以看到是因为什么改动引起的。</p><h2 id="比较两个commit的改动" tabindex="-1"><a class="header-anchor" href="#比较两个commit的改动"><span>比较两个commit的改动</span></a></h2><p>直接Ctrl / Command在Commits的面板里点击两个commit就能查看了。这个也是非常香了。</p><h2 id="查看执行的具体代码" tabindex="-1"><a class="header-anchor" href="#查看执行的具体代码"><span>查看执行的具体代码</span></a></h2><p>菜单里 Tools-show console</p><h2 id="务必认真学习的cli以及git运行逻辑" tabindex="-1"><a class="header-anchor" href="#务必认真学习的cli以及git运行逻辑"><span>务必认真学习的CLI以及Git运行逻辑</span></a></h2><p>GUI主要也就是在diff code，查看commit，简化一些cli的操作比较有用。是在对git以及git命令有一定深度了解以后才能使用的选项。毕竟如果都不知道这些操作背后是在运行什么，也会出现一些不可预料的代码事故。 另外一个角度来说，git的cli是全端通用的，而GUI客户端也只是在一些有gui的操作系统上使用。 真正学好Git来加强自己的代码调试是非常有用的。</p>',19),l=[m];function o(c,r){return t(),i("div",null,l)}const h=e(s,[["render",o],["__file","sublime merge.html.vue"]]),g=JSON.parse('{"path":"/blogs/Git/gui/sublime merge.html","title":"git gui推荐 - sublime merge","lang":"en-US","frontmatter":{"title":"git gui推荐 - sublime merge","date":"2024/06/08","tags":["git","software"],"categories":["git"]},"headers":[{"level":2,"title":"add commit push","slug":"add-commit-push","link":"#add-commit-push","children":[]},{"level":2,"title":"branch remote tags","slug":"branch-remote-tags","link":"#branch-remote-tags","children":[]},{"level":2,"title":"commit","slug":"commit","link":"#commit","children":[]},{"level":2,"title":"一个非常好用的功能 - FileHistory","slug":"一个非常好用的功能-filehistory","link":"#一个非常好用的功能-filehistory","children":[]},{"level":2,"title":"比较两个commit的改动","slug":"比较两个commit的改动","link":"#比较两个commit的改动","children":[]},{"level":2,"title":"查看执行的具体代码","slug":"查看执行的具体代码","link":"#查看执行的具体代码","children":[]},{"level":2,"title":"务必认真学习的CLI以及Git运行逻辑","slug":"务必认真学习的cli以及git运行逻辑","link":"#务必认真学习的cli以及git运行逻辑","children":[]}],"git":{"createdTime":1719149477000,"updatedTime":1719149477000,"contributors":[{"name":"InsHomePgup","email":"laptop13700h","commits":1}]},"filePathRelative":"blogs/Git/gui/sublime merge.md"}');export{h as comp,g as data};
