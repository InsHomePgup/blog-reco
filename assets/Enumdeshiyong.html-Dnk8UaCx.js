import{_ as n,c as s,o as a,e as p}from"./app-CgYSsB6L.js";const e={},t=p(`<h3 id="enum的基础使用" tabindex="-1"><a class="header-anchor" href="#enum的基础使用"><span>Enum的基础使用</span></a></h3><p>枚举，固定数量，固定值的一个数据类型</p><p>使用enum keyword 创建。</p><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts" data-title="ts"><pre><code><span class="line"><span class="token comment">// 默认顺序创建 ，也就是Blue = 0，Red = 1，Green = 2  </span></span>
<span class="line"><span class="token keyword">enum</span> Color <span class="token punctuation">{</span>  </span>
<span class="line">  Blue<span class="token punctuation">,</span>  </span>
<span class="line">  Red<span class="token punctuation">,</span>  </span>
<span class="line">  Green<span class="token punctuation">,</span>  </span>
<span class="line"><span class="token punctuation">}</span>  </span>
<span class="line">  </span>
<span class="line"><span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Color<span class="token punctuation">)</span>  </span>
<span class="line"><span class="token comment">// 但是默认创建的话，这里的类型会有点区别。</span></span>
<span class="line"><span class="token punctuation">{</span></span>
<span class="line">  <span class="token string-property property">&quot;0&quot;</span><span class="token operator">:</span> <span class="token string">&quot;Blue&quot;</span><span class="token punctuation">,</span>  <span class="token comment">//string:string</span></span>
<span class="line">  <span class="token string-property property">&quot;1&quot;</span><span class="token operator">:</span> <span class="token string">&quot;Red&quot;</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token string-property property">&quot;2&quot;</span><span class="token operator">:</span> <span class="token string">&quot;Green&quot;</span><span class="token punctuation">,</span> </span>
<span class="line">  <span class="token string-property property">&quot;Blue&quot;</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>  <span class="token comment">// string:number</span></span>
<span class="line">  <span class="token string-property property">&quot;Red&quot;</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token string-property property">&quot;Green&quot;</span><span class="token operator">:</span> <span class="token number">2</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;Color.Blue---&#39;</span><span class="token punctuation">,</span> Color<span class="token punctuation">.</span>Blue<span class="token punctuation">)</span> <span class="token comment">// 0  </span></span>
<span class="line"><span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;typeof Color.Blue---&#39;</span><span class="token punctuation">,</span> <span class="token keyword">typeof</span> Color<span class="token punctuation">.</span>Blue<span class="token punctuation">)</span> <span class="token comment">// number</span></span>
<span class="line"><span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;Color[0]---&#39;</span><span class="token punctuation">,</span> Color<span class="token punctuation">[</span><span class="token string">&#39;0&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token comment">// Blue  这里的Color后面方括号内使用的引号包裹的0  </span></span>
<span class="line"><span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;typeof Color[0]---&#39;</span><span class="token punctuation">,</span> <span class="token keyword">typeof</span> Color<span class="token punctuation">[</span><span class="token string">&#39;0&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token comment">// string  </span></span>
<span class="line"><span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;Color[Color.Red]---&#39;</span><span class="token punctuation">,</span> Color<span class="token punctuation">[</span>Color<span class="token punctuation">.</span>Red<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token comment">// Red</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="enum-作为声明类型的时候" tabindex="-1"><a class="header-anchor" href="#enum-作为声明类型的时候"><span>Enum 作为声明类型的时候</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts" data-title="ts"><pre><code><span class="line"><span class="token keyword">const</span> myColor <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  </span>
<span class="line"><span class="token keyword">function</span> <span class="token function">setColor</span><span class="token punctuation">(</span>color<span class="token operator">:</span> Color<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token comment">// 这里声明了一个</span></span>
<span class="line">  <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>color<span class="token punctuation">)</span> <span class="token comment">// 0  </span></span>
<span class="line">  myColor<span class="token punctuation">.</span>value <span class="token operator">=</span> Color<span class="token punctuation">[</span>color<span class="token punctuation">]</span>  </span>
<span class="line">  <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>myColor<span class="token punctuation">.</span>value<span class="token punctuation">)</span> <span class="token comment">// Blue  </span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"><span class="token function">setColor</span><span class="token punctuation">(</span>Color<span class="token punctuation">.</span>Blue<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>声明的时候这个函数的参数color类型是Color，但是这声明表示是这个Enum Color当中的一个成员，而不是Color整个Enum。</p><h3 id="声明enum每个成员的值的创建方式" tabindex="-1"><a class="header-anchor" href="#声明enum每个成员的值的创建方式"><span>声明Enum每个成员的值的创建方式</span></a></h3><p>按照上面那种方式创建，enum对象的key,value 有不同的类型。</p><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts" data-title="ts"><pre><code><span class="line"></span>
<span class="line"><span class="token keyword">enum</span> days <span class="token punctuation">{</span>  </span>
<span class="line">  Monday <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">,</span>  </span>
<span class="line">  Tuesday <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">,</span>  </span>
<span class="line">  Wednesday <span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">,</span>  </span>
<span class="line">  Thursday <span class="token operator">=</span> <span class="token number">4</span><span class="token punctuation">,</span>  </span>
<span class="line">  Friday <span class="token operator">=</span> <span class="token number">5</span><span class="token punctuation">,</span>  </span>
<span class="line">  Saturday <span class="token operator">=</span> <span class="token number">6</span><span class="token punctuation">,</span>  </span>
<span class="line">  Sunday <span class="token operator">=</span> <span class="token number">7</span><span class="token punctuation">,</span>  </span>
<span class="line"><span class="token punctuation">}</span>  </span>
<span class="line">  </span>
<span class="line"><span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;days---&#39;</span><span class="token punctuation">,</span> days<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token punctuation">{</span></span>
<span class="line">  <span class="token string-property property">&quot;1&quot;</span><span class="token operator">:</span> <span class="token string">&quot;Monday&quot;</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token string-property property">&quot;2&quot;</span><span class="token operator">:</span> <span class="token string">&quot;Tuesday&quot;</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token string-property property">&quot;3&quot;</span><span class="token operator">:</span> <span class="token string">&quot;Wednesday&quot;</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token string-property property">&quot;4&quot;</span><span class="token operator">:</span> <span class="token string">&quot;Thursday&quot;</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token string-property property">&quot;5&quot;</span><span class="token operator">:</span> <span class="token string">&quot;Friday&quot;</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token string-property property">&quot;6&quot;</span><span class="token operator">:</span> <span class="token string">&quot;Saturday&quot;</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token string-property property">&quot;7&quot;</span><span class="token operator">:</span> <span class="token string">&quot;Sunday&quot;</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token string-property property">&quot;Monday&quot;</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token string-property property">&quot;Tuesday&quot;</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token string-property property">&quot;Wednesday&quot;</span><span class="token operator">:</span> <span class="token number">3</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token string-property property">&quot;Thursday&quot;</span><span class="token operator">:</span> <span class="token number">4</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token string-property property">&quot;Friday&quot;</span><span class="token operator">:</span> <span class="token number">5</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token string-property property">&quot;Saturday&quot;</span><span class="token operator">:</span> <span class="token number">6</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token string-property property">&quot;Sunday&quot;</span><span class="token operator">:</span> <span class="token number">7</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>舒服了，这样创建的话，类型也对的上了，也能知道key，value是个什么东西了。 而且这样能控制key，value的值，代码里也是显式声明。</p>`,11),o=[t];function l(c,i){return a(),s("div",null,o)}const r=n(e,[["render",l],["__file","Enumdeshiyong.html.vue"]]),k=JSON.parse('{"path":"/blogs/FrontEnd/Typescript/Enumdeshiyong.html","title":"","lang":"en-US","frontmatter":{},"headers":[{"level":3,"title":"Enum的基础使用","slug":"enum的基础使用","link":"#enum的基础使用","children":[]},{"level":3,"title":"Enum 作为声明类型的时候","slug":"enum-作为声明类型的时候","link":"#enum-作为声明类型的时候","children":[]},{"level":3,"title":"声明Enum每个成员的值的创建方式","slug":"声明enum每个成员的值的创建方式","link":"#声明enum每个成员的值的创建方式","children":[]}],"git":{"createdTime":1730945492000,"updatedTime":1734598347000,"contributors":[{"name":"Abraham K.","email":"47906083+InsHomePgup@users.noreply.github.com","commits":1},{"name":"abra","email":"github","commits":1}]},"filePathRelative":"blogs/FrontEnd/Typescript/Enum的使用.md"}');export{r as comp,k as data};
