import{_ as a,c as e,a as s,b as p,d as t,e as l,o as i,r as o}from"./app-CgYSsB6L.js";const c={},r=l(`<p>在官网的教程里演示的是添加json的plugin。 那么作为举一反三的能力，我选择添加ts的plugin</p><h1 id="rollup-plugin-typescript" tabindex="-1"><a class="header-anchor" href="#rollup-plugin-typescript"><span>@rollup/plugin-typescript</span></a></h1><p>不知道怎么上手，那我先安装这个包试试。</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token function">pnpm</span> <span class="token function">add</span> @rollup/plugin-typescript --save-dev</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p><img src="https://raw.githubusercontent.com/InsHomePgup/pic_go_img/main/Pasted image 20240830175050.png" alt=""></p><p>根据npm上的介绍，还需要安装这两个包。</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">pnpm add typescript tslib -S -D</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>然后配置文件添加plugin的配置</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"></span>
<span class="line"><span class="token keyword">import</span> typescript <span class="token keyword">from</span> <span class="token string">&#39;@rollup/plugin-typescript&#39;</span><span class="token punctuation">;</span>  </span>
<span class="line"><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>  </span>
<span class="line">    <span class="token literal-property property">input</span><span class="token operator">:</span> <span class="token string">&#39;src/main.js&#39;</span><span class="token punctuation">,</span>  <span class="token comment">// 入口  </span></span>
<span class="line">    <span class="token literal-property property">output</span><span class="token operator">:</span> <span class="token punctuation">{</span>  <span class="token comment">// 出口  </span></span>
<span class="line">        <span class="token literal-property property">file</span><span class="token operator">:</span> <span class="token string">&#39;bundle.js&#39;</span><span class="token punctuation">,</span>  </span>
<span class="line">        <span class="token literal-property property">format</span><span class="token operator">:</span> <span class="token string">&#39;cjs&#39;</span>  <span class="token comment">// 打包规范  </span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">,</span>  </span>
<span class="line">    <span class="token literal-property property">plugins</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token function">typescript</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span>  </span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>npm 的介绍上说使用行内的写tsconfig的方法，我想了一下还是用文件的形式。</p><p>根目录创建tsconfig.json 文件 然后简单写入一些基础配置</p><div class="language-json line-numbers-mode" data-highlighter="prismjs" data-ext="json" data-title="json"><pre><code><span class="line"><span class="token comment">// tsconfig.json 之前测试ts的时候的配置，随便加进来的</span></span>
<span class="line"><span class="token punctuation">{</span>  </span>
<span class="line">  <span class="token property">&quot;compilerOptions&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>  </span>
<span class="line">    <span class="token property">&quot;module&quot;</span><span class="token operator">:</span> <span class="token string">&quot;NodeNext&quot;</span><span class="token punctuation">,</span>  </span>
<span class="line">    <span class="token property">&quot;moduleResolution&quot;</span><span class="token operator">:</span> <span class="token string">&quot;NodeNext&quot;</span><span class="token punctuation">,</span>  </span>
<span class="line">    <span class="token property">&quot;resolvePackageJsonExports&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>  </span>
<span class="line">    <span class="token property">&quot;resolveJsonModule&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>  </span>
<span class="line">    <span class="token property">&quot;allowImportingTsExtensions&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span>  </span>
<span class="line">  <span class="token punctuation">}</span>  </span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>同时去修改rollup的config</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token comment">// rollup.config.js</span></span>
<span class="line"><span class="token keyword">import</span> typescript <span class="token keyword">from</span> <span class="token string">&#39;@rollup/plugin-typescript&#39;</span><span class="token punctuation">;</span>  </span>
<span class="line"><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>  </span>
<span class="line">    <span class="token literal-property property">input</span><span class="token operator">:</span> <span class="token string">&#39;src/main.js&#39;</span><span class="token punctuation">,</span>  <span class="token comment">// 入口  </span></span>
<span class="line">    <span class="token literal-property property">output</span><span class="token operator">:</span> <span class="token punctuation">{</span>  <span class="token comment">// 出口  </span></span>
<span class="line">        <span class="token literal-property property">file</span><span class="token operator">:</span> <span class="token string">&#39;bundle.js&#39;</span><span class="token punctuation">,</span>  </span>
<span class="line">        <span class="token literal-property property">format</span><span class="token operator">:</span> <span class="token string">&#39;cjs&#39;</span>  <span class="token comment">// 打包规范  </span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">,</span>  </span>
<span class="line">    <span class="token literal-property property">plugins</span><span class="token operator">:</span> <span class="token punctuation">[</span>  </span>
<span class="line">        <span class="token function">typescript</span><span class="token punctuation">(</span><span class="token punctuation">{</span>  </span>
<span class="line">            <span class="token literal-property property">tsconfig</span><span class="token operator">:</span> <span class="token string">&#39;./tsconfig.json&#39;</span><span class="token punctuation">,</span>  </span>
<span class="line">        <span class="token punctuation">}</span><span class="token punctuation">)</span>  </span>
<span class="line">    <span class="token punctuation">]</span>  </span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>看上去非常不错，那么现在pnpm run build一下，很好，报错了。。</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">Specified &#39;include&#39; paths were &#39;[&quot;**/*&quot;]&#39; and &#39;exclude&#39; paths were &#39;[]&#39;.</span>
<span class="line">[!] (plugin typescript) RollupError: [plugin typescript] @rollup/plugin-typescript: Couldn&#39;t process compiler options</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>没有ts文件可以编译，因为我们当前目录下都是js文件，改用ts文件。 并且修改入口文件为main.ts <img src="https://raw.githubusercontent.com/InsHomePgup/pic_go_img/main/blog/20241220110901717.png" width="50%"></p><img src="https://raw.githubusercontent.com/InsHomePgup/pic_go_img/main/blog/20241220110939721.png" width="50%"><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token function">pnpm</span> run build</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>打包成功，但是有一条提示</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">&gt; rollup -c</span>
<span class="line">src/main.ts → bundle.js...</span>
<span class="line">(!) [plugin typescript] @rollup/plugin-typescript TS5096: Option &#39;allowImportingTsExtensions&#39; can only be used when either &#39;noEmit&#39; or &#39;emitDeclarationOnly&#39; is set.</span>
<span class="line">created bundle.js in 553ms</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>关于tsconfig的配置的一条提示。(这B配置提示要开启noEmit，但是后面我加上noEmit以后还是提示了这个错误) &quot;typescript&quot;: &quot;^5.7.2&quot;</p><p>在issue的讨论内说是已经在过往版本修复了。</p>`,23),u={href:"https://github.com/cypress-io/cypress/issues/26148",target:"_blank",rel:"noopener noreferrer"},d=s("p",null,"不过这里也是打包成功了，现在可以在项目内使用ts了。",-1);function m(v,k){const n=o("ExternalLinkIcon");return i(),e("div",null,[r,s("p",null,[s("a",u,[p("github issue"),t(n)])]),d])}const b=a(c,[["render",m],["__file","(er)Rolluptianjiatypescriptchajianlaibianyitswenjian.html.vue"]]),h=JSON.parse('{"path":"/blogs/FrontEnd/Rollup/(er)Rolluptianjiatypescriptchajianlaibianyitswenjian.html","title":"@rollup/plugin-typescript","lang":"en-US","frontmatter":{},"headers":[],"git":{"createdTime":1725012052000,"updatedTime":1734665518000,"contributors":[{"name":"Abraham K.","email":"47906083+InsHomePgup@users.noreply.github.com","commits":1}]},"filePathRelative":"blogs/FrontEnd/Rollup/(二)Rollup添加typescript插件来编译ts文件.md"}');export{b as comp,h as data};
