import{_ as n,c as s,o as a,e as t}from"./app-CgYSsB6L.js";const p={},e=t(`<div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts" data-title="ts"><pre><code><span class="line"><span class="token keyword">function</span> <span class="token function">funA</span><span class="token punctuation">(</span>numA<span class="token operator">:</span><span class="token builtin">number</span><span class="token punctuation">,</span>strA<span class="token operator">:</span><span class="token builtin">string</span><span class="token punctuation">,</span>booA<span class="token operator">:</span><span class="token builtin">boolean</span><span class="token punctuation">)</span><span class="token operator">:</span><span class="token keyword">void</span><span class="token punctuation">{</span>  </span>
<span class="line">  </span>
<span class="line"><span class="token punctuation">}</span>  </span>
<span class="line">  </span>
<span class="line"><span class="token keyword">function</span> <span class="token function">funB</span><span class="token punctuation">(</span>numA<span class="token operator">:</span><span class="token builtin">number</span><span class="token punctuation">)</span><span class="token operator">:</span><span class="token builtin">Promise</span><span class="token operator">&lt;</span><span class="token builtin">number</span><span class="token operator">&gt;</span><span class="token punctuation">{</span>  </span>
<span class="line">    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name"><span class="token builtin">Promise</span></span><span class="token punctuation">(</span><span class="token punctuation">(</span>resolve<span class="token punctuation">,</span>reject<span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>  </span>
<span class="line">        <span class="token function">resolve</span><span class="token punctuation">(</span>numA<span class="token punctuation">)</span><span class="token punctuation">;</span>  </span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">interface</span> <span class="token class-name">sumFunc</span><span class="token punctuation">{</span>  </span>
<span class="line">    <span class="token punctuation">(</span>numA<span class="token operator">:</span><span class="token builtin">number</span><span class="token punctuation">,</span>strA<span class="token operator">:</span><span class="token builtin">string</span><span class="token punctuation">,</span>booA<span class="token operator">:</span><span class="token builtin">boolean</span><span class="token punctuation">)</span><span class="token operator">:</span><span class="token keyword">void</span>  </span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),o=[e];function c(l,i){return a(),s("div",null,o)}const r=n(p,[["render",c],["__file","TypeScript Function.html.vue"]]),k=JSON.parse('{"path":"/blogs/FrontEnd/Typescript/TypeScript Function.html","title":"","lang":"en-US","frontmatter":{},"headers":[],"git":{"createdTime":1735111373000,"updatedTime":1735111373000,"contributors":[{"name":"Abraham K.","email":"47906083+InsHomePgup@users.noreply.github.com","commits":1}]},"filePathRelative":"blogs/FrontEnd/Typescript/TypeScript Function.md"}');export{r as comp,k as data};
