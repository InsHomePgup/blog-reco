import{_ as e,c as t,a as n,b as i,d as l,e as s,o as p,r as c}from"./app-CgYSsB6L.js";const o={},r=s(`<p>ts是描述一个数据的形状。 js有那些数据，numeber啊，string啊。 也有array，map，object。</p><h3 id="描述一个object的形状。" tabindex="-1"><a class="header-anchor" href="#描述一个object的形状。"><span>描述一个object的形状。</span></a></h3><p>用interface</p><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts" data-title="ts"><pre><code><span class="line"><span class="token keyword">interface</span> <span class="token class-name">PersonDto</span> <span class="token punctuation">{</span>  </span>
<span class="line">    name<span class="token operator">:</span> <span class="token builtin">string</span>  </span>
<span class="line">    age<span class="token operator">:</span> <span class="token builtin">number</span>  </span>
<span class="line">    job<span class="token operator">?</span><span class="token operator">:</span><span class="token builtin">string</span>  </span>
<span class="line">    salary<span class="token operator">?</span><span class="token operator">:</span><span class="token builtin">number</span>  </span>
<span class="line">    <span class="token keyword">readonly</span> gender <span class="token operator">?</span><span class="token operator">:</span><span class="token number">0</span><span class="token operator">|</span><span class="token number">1</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>语法 readonly [key]?:value readonly 和 ? 都是可选项</p><p>? 代表可选变量，就是这个对象的形状里，这个属性是可选的 readonly 表示这个形状里，这个属性是不可变更的</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line"></span>
<span class="line">用type (不推荐)</span>
<span class="line"></span>
<span class="line">\`\`\`ts</span>
<span class="line">type PersonDto  = {  </span>
<span class="line">  name: string  </span>
<span class="line">  age: number  </span>
<span class="line">}</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="object-类型" tabindex="-1"><a class="header-anchor" href="#object-类型"><span>object 类型</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts" data-title="ts"><pre><code><span class="line"><span class="token comment">// object 类型  </span></span>
<span class="line"><span class="token keyword">const</span> obj<span class="token operator">:</span>object<span class="token operator">=</span><span class="token punctuation">{</span>  </span>
<span class="line">    foo<span class="token operator">:</span><span class="token number">12</span>  </span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>object 可以使用一些Object的函数</p>`,10),d={href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",target:"_blank",rel:"noopener noreferrer"},u=s(`<div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts" data-title="ts"><pre><code><span class="line">Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span>key<span class="token operator">:</span><span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>  </span>
<span class="line">    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span>  </span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="值类型" tabindex="-1"><a class="header-anchor" href="#值类型"><span>值类型</span></a></h3>`,2);function b(m,v){const a=c("ExternalLinkIcon");return p(),t("div",null,[r,n("p",null,[n("a",d,[i("MDN Object"),l(a)])]),u])}const h=e(o,[["render",b],["__file","（er）duixiangleixing、zhileixing、lianheleixing、jiaochaleixing.html.vue"]]),g=JSON.parse('{"path":"/blogs/FrontEnd/Typescript/（er）duixiangleixing、zhileixing、lianheleixing、jiaochaleixing.html","title":"","lang":"en-US","frontmatter":{},"headers":[{"level":3,"title":"描述一个object的形状。","slug":"描述一个object的形状。","link":"#描述一个object的形状。","children":[]},{"level":3,"title":"object 类型","slug":"object-类型","link":"#object-类型","children":[]},{"level":3,"title":"值类型","slug":"值类型","link":"#值类型","children":[]}],"git":{"createdTime":1734757678000,"updatedTime":1734771735000,"contributors":[{"name":"Abraham K.","email":"47906083+InsHomePgup@users.noreply.github.com","commits":2}]},"filePathRelative":"blogs/FrontEnd/Typescript/（二）对象类型、值类型、联合类型、交叉类型.md"}');export{h as comp,g as data};
